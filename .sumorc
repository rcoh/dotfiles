git config --global remote.origin.tagopt --no-tags
git config --global push.default upstream

export SUMO_HOME=$HOME/code/sumo
alias dsh=$SUMO_HOME/ops/bin/dsh.sh
alias stage_build=$SUMO_HOME/ops/bin/stage_build.sh

export MVN_HOME=$SUMO_HOME/bin/apache-maven-3.3.3
export MAVEN_OPTS="-Xmx4096m -Djava.awt.headless=true"
export PATH=$MVN_HOME/bin:$PATH
export PATH=~/Downloads/zinc-0.3.9/bin/:$PATH

export JAVA_HOME=/usr/lib/jvm/java-7-oracle/

function build() {
  if $SUMO_HOME/bin/quick-assemble.sh $@ ; then
      notify "Sumo" "Builder" "Build succeeded: $@"
  else
      notify "Sumo" "Builder" "Build failed: $@"
      return 1
  fi
}
alias build=build

alias fbuild='build -c && build service'

function up() {
  if pgrep mysql ; then
      echo "MySQL is running. Sumo won't start"
      return 1
  fi
  if $SUMO_HOME/system/bin/pre-integration-tests.sh -z 10 $@ ; then
      notify "Sumo" "Launcher" "Sumo is running! ($@)"
  else
      notify "Sumo" "Launcher" "Sumo failed to launch: $@"
      return 1
  fi
}
alias up=up

alias uponly="$SUMO_HOME/system/bin/pre-integration-tests.sh -sn -z 0 -o"

# Stop one component of sumo locally
downonly() {
  cd $SUMO_HOME/system
  bin/killProcess.sh com.sumologic.$1.Bootstrap
  bin/killProcess.sh com.sumologic.$1.scala.Bootstrap
  bin/killProcess.sh com.sumologic.scala.$1.Bootstrap
  bin/killProcess.sh com.sumologic.scala.$1.Collector
  bin/killProcess.sh "MODULE=$1"
  cd -
}

function sshup() {
  sshfs -o idmap=user russell@russell-mac.local:/Volumes/encrypted ~/.sumo
  ssh-add ~/.sumo/id_rsa
}

function sshdown() {
  fusermount -u ~/.sumo
}

# Run an individual unit test when in the relevant module directory eg:
# unittest ReliableCuratorLockTest
function unittest() {
  mvn test -P zinc -T 1C -Dtest=$1
}

function it-upload() {
  mvn -T 1C -Premote-it assembly:assembly 
  rsync -v -r --stats target/assembly $1:.
  #ssh $1 'cd assembly/system-20.1-SNAPSHOT-bin/system-20.1-SNAPSHOT-bin && bin/run-it AllITSuite $2'
}

function it-prep() {
  ssh $1 'mkdir /home/$USER/.sumo-props'
  ssh $1 'sudo cp /usr/sumo/system-tools/config/system-tools.properties ~/.sumo-props/util.properties'
  ssh $1 'sudo chmod 644 ~/.sumo-props/util.properties'
}

alias unittest=unittest

function unpzip() {
  echo "Unzipping $1 to ${1%.*}"
  pigz -dc $1 > "${1%.*}" 
}

lt() {
  ASS=$1
  echo $SUMO_HOME/ops/assemblies/latest/$ASS-20.1-SNAPSHOT-bin/$ASS-20.1-SNAPSHOT/logs/$ASS.log 
}

#kill-assembly() {
#  echo "Killing com.sumologic.$1.Bootstrap"
#  $SUMO_HOME/system/bin/killProcess.sh #com.sumologic.Bootstrap
#}

alias unpzip=unpzip

alias down=$SUMO_HOME/system/bin/post-integration.sh
alias logsearch='find | grep "log$" | xargs grep'
alias logtail='find | grep "log$" | xargs tail -f'

alias collstart='$SUMO_HOME/collector/bin/run.sh -u http://localhost:23660 -e russell@demo.com -p 1Uy28Va4AlxMhDjWh2SG@1 -n hey -b json/rcoh-collector.json'

alias push=${SUMO_HOME}/bin/push-current-branch.sh

alias slack='/opt/google/chrome/google-chrome --app=https://sumologic.slack.com/messages/general/'
alias todo='/opt/google/chrome/google-chrome --app=https://muchtodo.firebaseapp.com'

alias branch="git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format='%(refname:short)'"

alias pdsh="pdsh -l russell"
alias props='$SUMO_HOME/system/bin/local-props-updater.py'
alias latest='cd $SUMO_HOME/ops/assemblies/latest'
alias kill-assembly='$SUMO_HOME/system/bin/killProcess.sh' 
alias db='$SUMO_HOME/system/bin/third-party/start-mysql-only.sh'
alias jira='git log --author="David Andrzejewski" --pretty=format:%s4m | grep -oE "^SUMO-[0-9]+" | head -1'

#alias sumo="$SUMO_HOME"

pr() {
  if [ -n "$1" ]; then
    MERGE_BRANCH=$1;
  else
    MERGE_BRANCH="master";
  fi
    
  CURRENT_BRANCH=`git rev-parse --abbrev-ref HEAD`
  google-chrome "https://github.com/Sanyaku/sumologic/compare/$MERGE_BRANCH...$CURRENT_BRANCH"
}
